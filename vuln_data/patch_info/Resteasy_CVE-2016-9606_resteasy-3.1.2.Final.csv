Fix_Path,Fix_Src
"testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/yaml/YamlProviderTest.java:[39,135]:YamlProviderTest","public class YamlProviderTest {

    protected static final Logger logger = Logger.getLogger(YamlProviderTest.class.getName());

    static ResteasyClient client;

    @Deployment
    public static Archive<?> deploy() {
        WebArchive war = TestUtil.prepareArchive(YamlProviderTest.class.getSimpleName());
        war.addClass(YamlProviderTest.class).addAsResource(""META-INF/services/javax.ws.rs.ext.Providers"");
        return TestUtil.finishContainerPrepare(war, null, YamlProviderResource.class, YamlProviderObject.class,
                YamlProviderNestedObject.class);
    }

    @Before
    public void init() {
        client = new ResteasyClientBuilder().build();
    }

    @After
    public void after() throws Exception {
        client.close();
    }

    private String generateURL(String path) {
        return PortProviderUtil.generateURL(path, YamlProviderTest.class.getSimpleName());
    }


    /**
     * @tpTestDetails Client sends GET request for yaml annotated resource. It is asserted that response contains yaml header.
     * @tpPassCrit The resource returns yaml entity same as in the original request entity
     * @tpSince RESTEasy 3.0.16
     */
    @Test
    public void testGet() throws Exception {
        WebTarget target = client.target(generateURL(""/yaml""));
        Response response = target.request().get();
        String stringResponse = response.readEntity(String.class);
        Assert.assertEquals(HttpResponseCodes.SC_OK, response.getStatus());
        Assert.assertEquals(""The response doesn't contain correct yaml header"",
                ""text/x-yaml;charset=UTF-8"", response.getHeaders().getFirst(""Content-Type""));
        YamlProviderObject o1 = YamlProviderResource.createMyObject();
        String s1 = new Yaml().dump(o1);
        Assert.assertEquals(""The entity response doesn't match the original request"", s1, stringResponse);
    }

    /**
     * @tpTestDetails Client sends POST request for yaml annotated resource. It is asserted that response contains yaml header.
     * @tpPassCrit The resource returns yaml entity same as in the original request entity
     * @tpInfo JBEAP-1047
     * @tpSince RESTEasy 3.0.16
     */
    @Test
    public void testPost() throws Exception {
        WebTarget target = client.target(generateURL(""/yaml""));
        YamlProviderObject o1 = YamlProviderResource.createMyObject();
        String s1 = new Yaml().dump(o1);
        Response response = target.request().post(Entity.entity(s1, ""text/x-yaml""));
        String stringResponse = response.readEntity(String.class);
        Assert.assertEquals(TestUtil.getErrorMessageForKnownIssue(""JBEAP-1047""), HttpResponseCodes.SC_OK, response.getStatus());
        Assert.assertEquals(""The response doesn't contain correct yaml header"",
                ""text/x-yaml;charset=UTF-8"", response.getHeaders().getFirst(""Content-Type""));
        Assert.assertEquals(""The entity response doesn't match the original request"", s1, stringResponse);
    }

    /**
     * @tpTestDetails Client sends POST request for yaml annotated resource with the entity in incorrect format
     * @tpPassCrit The response code is Internal server error (500)
     * @tpSince RESTEasy 3.0.16
     */
    @Test
    public void testBadPost() throws Exception {
        WebTarget target = client.target(generateURL(""/yaml""));
        Response response = target.request().post(Entity.entity(""---! bad"", ""text/x-yaml""));
        Assert.assertEquals(TestUtil.getErrorMessageForKnownIssue(""JBEAP-7614"", ""Response code BAD_REQUEST (400) expected""), HttpResponseCodes.SC_BAD_REQUEST, response.getStatus());
        response.close();
    }

    /**
     * @tpTestDetails Client sends POST request for yaml with list of string
     * @tpPassCrit The resource returns yaml entity same as in the original request entity
     * @tpSince RESTEasy 3.0.16
     */
    @Test
    public void testPostList() throws Exception {
        List<String> data = Arrays.asList(""a"", ""b"", ""c"");
        String s1 = new Yaml().dump(data).trim();

        WebTarget target = client.target(generateURL(""/yaml/list""));
        Response response = target.request().post(Entity.entity(s1, ""text/x-yaml""));
        Assert.assertEquals(HttpResponseCodes.SC_OK, response.getStatus());
        Assert.assertEquals(""text/plain;charset=UTF-8"", response.getHeaderString(""Content-Type""));
        Assert.assertEquals(s1, response.readEntity(String.class).trim());
    }

}
"
"testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/yaml/YamlProviderTest.java:[46,51]:deploy","    public static Archive<?> deploy() {
        WebArchive war = TestUtil.prepareArchive(YamlProviderTest.class.getSimpleName());
        war.addClass(YamlProviderTest.class).addAsResource(""META-INF/services/javax.ws.rs.ext.Providers"");
        return TestUtil.finishContainerPrepare(war, null, YamlProviderResource.class, YamlProviderObject.class,
                YamlProviderNestedObject.class);
    }
"
"testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/yaml/YamlPojoBindingTest.java:[39,127]:YamlPojoBindingTest","public class YamlPojoBindingTest {
    private static final String RESPONSE_ERROR_MSG = ""Response has wrong content"";
    private static final String HEADER_ERROR_MSG = ""Wrong content-type header"";

    @Deployment
    public static Archive<?> createTestArchive() {
        WebArchive war = TestUtil.prepareArchive(YamlPojoBindingTest.class.getSimpleName());
        war.addClasses(YamlPojoBindingNestedObject.class, YamlPojoBindingObject.class)
        .addAsResource(""META-INF/services/javax.ws.rs.ext.Providers"");
        return TestUtil.finishContainerPrepare(war, null, YamlResource.class);
    }

    private String generateURL(String path) {
        return PortProviderUtil.generateURL(path, YamlPojoBindingTest.class.getSimpleName());
    }

    /**
     * @tpTestDetails GET method test
     * @tpSince RESTEasy 3.0.16
     */
    @Test
    public void testGet() throws Exception {
        Client client = ClientBuilder.newClient();
        WebTarget get = client.target(generateURL(""/yaml""));
        Response response = get.request().get();

        assertEquals(HttpResponseCodes.SC_OK, response.getStatus());
        assertEquals(HEADER_ERROR_MSG, ""text/x-yaml;charset=UTF-8"", response.getHeaders().getFirst(""Content-Type""));

        String s = response.readEntity(String.class);
        YamlPojoBindingObject o1 = YamlResource.createMyObject();
        String s1 = new Yaml().dump(o1);
        Assert.assertEquals(RESPONSE_ERROR_MSG, s1, s);
        response.close();
    }

    /**
     * @tpTestDetails POST method test
     * @tpSince RESTEasy 3.0.16
     */
    @Test
    public void testPost() throws Exception {

        Client client = ClientBuilder.newClient();
        WebTarget post = client.target(generateURL(""/yaml""));

        YamlPojoBindingObject o1 = YamlResource.createMyObject();
        String s1 = new Yaml().dump(o1);
        Response response = post.request().post(Entity.entity(s1, ""text/x-yaml""));

        Assert.assertEquals(HttpResponseCodes.SC_OK, response.getStatus());
        Assert.assertEquals(HEADER_ERROR_MSG, ""text/x-yaml;charset=UTF-8"", response.getHeaders().getFirst(""Content-Type""));
        Assert.assertEquals(RESPONSE_ERROR_MSG, s1, response.readEntity(String.class));
        response.close();
    }

    /**
     * @tpTestDetails POST method test. Wrong request, error expected.
     * @tpSince RESTEasy 3.0.16
     */
    @Test
    public void testBadPost() throws Exception {
        Client client = ClientBuilder.newClient();
        WebTarget post = client.target(generateURL(""/yaml""));
        Response response = post.request().post(Entity.entity(""---! bad"", ""text/x-yaml""));
        Assert.assertEquals(TestUtil.getErrorMessageForKnownIssue(""JBEAP-7614"", ""Response code BAD_REQUEST (400) expected""), HttpResponseCodes.SC_BAD_REQUEST, response.getStatus());
        response.close();
    }

    /**
     * @tpTestDetails POST method test. List is in request and in response.
     * @tpSince RESTEasy 3.0.16
     */
    @Test
    public void testPostList() throws Exception {
        Client client = ClientBuilder.newClient();
        WebTarget post = client.target(generateURL(""/yaml/list""));

        List<String> data = Arrays.asList(""a"", ""b"", ""c"");
        String s1 = new Yaml().dump(data).trim();

        Response response = post.request().post(Entity.entity(s1, ""text/x-yaml""));
        Assert.assertEquals(HttpResponseCodes.SC_OK, response.getStatus());

        Assert.assertEquals(HEADER_ERROR_MSG, ""text/plain;charset=UTF-8"", response.getHeaders().getFirst(""Content-Type""));
        Assert.assertEquals(RESPONSE_ERROR_MSG, s1, response.readEntity(String.class).trim());
    }

}
"
"testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/providers/yaml/YamlPojoBindingTest.java:[44,49]:createTestArchive","    public static Archive<?> createTestArchive() {
        WebArchive war = TestUtil.prepareArchive(YamlPojoBindingTest.class.getSimpleName());
        war.addClasses(YamlPojoBindingNestedObject.class, YamlPojoBindingObject.class)
        .addAsResource(""META-INF/services/javax.ws.rs.ext.Providers"");
        return TestUtil.finishContainerPrepare(war, null, YamlResource.class);
    }
"
