Fix_Path,Fix_Src
"broker-core/src/main/java/org/apache/qpid/server/security/auth/manager/AbstractScramAuthenticationManager.java:[300,369]:getSaltAndPasswordKeys","    public SaltAndPasswordKeys getSaltAndPasswordKeys(final String username)
    {
        ManagedUser user = getUser(username);

        final byte[] salt;
        final byte[] storedKey;
        final byte[] serverKey;
        final int iterationCount;
        final SaslException exception;

        if(user == null)
        {
            // don't disclose that the user doesn't exist, just generate random data so the failure is indistinguishable
            // from the ""wrong password"" case.
            salt = generateSalt();
            storedKey = null;
            serverKey = null;
            iterationCount = getIterationCount();
            exception = new SaslException(""Authentication Failed"");
        }
        else
        {
            updateStoredPasswordFormatIfNecessary(user);
            final String[] passwordFields = user.getPassword().split("","");
            salt = Strings.decodeBase64(passwordFields[PasswordField.SALT.ordinal()]);
            storedKey = Strings.decodeBase64(passwordFields[PasswordField.STORED_KEY.ordinal()]);
            serverKey = Strings.decodeBase64(passwordFields[PasswordField.SERVER_KEY.ordinal()]);
            iterationCount = Integer.parseInt(passwordFields[PasswordField.ITERATION_COUNT.ordinal()]);
            exception = null;
        }

        return new SaltAndPasswordKeys()
        {
            @Override
            public byte[] getSalt()
            {
                return salt;
            }

            @Override
            public byte[] getStoredKey() throws SaslException
            {
                if(storedKey == null)
                {
                    throw exception;
                }
                return storedKey;
            }

            @Override
            public byte[] getServerKey() throws SaslException
            {
                if(serverKey == null)
                {
                    throw exception;
                }
                return serverKey;
            }

            @Override
            public int getIterationCount() throws SaslException
            {
                if(iterationCount < 0)
                {
                    throw exception;
                }
                return iterationCount;
            }
        };
    }
"
